{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","getRefs","start","document","querySelectorAll","setInterval","currentTime","Date","now","deltaTime","updateClockface","getTimeComponents","time","days","pad","Math","floor","hours","mins","secs","value","String","padStart","textContent","ourTimer","querySelector","myBirthdayTimer"],"mappings":";AAAA,MAAMA,EACFC,aAAY,SAAEC,EAAF,WAAYC,IACfD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,KAAO,KAAKC,QAAQ,KAAKH,UACzBI,KAAAA,QAGTA,QACqBC,SAASC,oBAAoB,KAAKN,mBACnDO,YAAY,KACFC,MAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKV,WAAaO,EAC/BI,KAAAA,gBAAgB,KAAKC,kBAAkBF,KAC7C,KAGPE,kBAAkBC,GAKP,MAAA,CAAEC,KAJI,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QAI1BK,MAHD,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAG9CM,KAFT,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MAElCO,KADf,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,OAI5DE,IAAIM,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGrCZ,iBAAgB,KAAEG,EAAF,MAAQI,EAAR,KAAeC,EAAf,KAAqBC,IAC5BnB,KAAAA,KAAKa,KAAKU,YAAcV,EACxBb,KAAAA,KAAKiB,MAAMM,YAAcN,EACzBjB,KAAAA,KAAKkB,KAAKK,YAAcL,EACxBlB,KAAAA,KAAKmB,KAAKI,YAAcJ,EAGjClB,QAAQH,GACE0B,MAAAA,EAAWrB,SAASsB,cAAc3B,GAOjCE,MANM,CACTa,KAAMW,EAASC,cAAc,yBAC7BR,MAAOO,EAASC,cAAc,0BAC9BP,KAAMM,EAASC,cAAc,yBAC7BN,KAAMK,EAASC,cAAc,2BAMzC,MAAMC,EAAkB,IAAI9B,EAAe,CACvCE,SAAU,WACVC,WAAY,IAAIQ,KAAK","file":"src.e6290887.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n    constructor({ selector, targetDate }) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.refs = this.getRefs(this.selector);\n        this.start();\n    }\n\n    start() {\n        let timerValue = document.querySelectorAll(`${this.selector} .value`);\n        setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            this.updateClockface(this.getTimeComponents(deltaTime));\n        }, 1000);\n    }\n\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n        return { days, hours, mins, secs };\n    }\n\n    pad(value) {\n        return String(value).padStart(2, '0');\n    };\n\n    updateClockface({ days, hours, mins, secs }) {\n        this.refs.days.textContent = days;\n        this.refs.hours.textContent = hours;\n        this.refs.mins.textContent = mins;\n        this.refs.secs.textContent = secs;\n    }\n\n    getRefs(selector) {\n        const ourTimer = document.querySelector(selector);\n        const refs = {\n            days: ourTimer.querySelector('[data-value = \"days\"]'),\n            hours: ourTimer.querySelector('[data-value = \"hours\"]'),\n            mins: ourTimer.querySelector('[data-value = \"mins\"]'),\n            secs: ourTimer.querySelector('[data-value = \"secs\"]'),\n        };\n        return refs;\n    }\n}\n\nconst myBirthdayTimer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Apr 05, 2022'),\n});\n"]}